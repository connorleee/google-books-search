{"version":3,"sources":["components/navBar.js","components/searchBar.js","components/bookCard.js","components/searchResults.js","pages/search.js","App.js","registerServiceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","href","SearchBar","props","id","type","placeholder","aria-label","BookCard","src","alt","SearchResults","bookCard","Search","state","books","title","navBar","searchBar","searchResults","Component","App","search","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c5601fa7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div>\r\n            <nav className=\"container-fluid bg-light mb-5 py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <a className=\"navbar-brand\" href=\"/\"><h3>Google Books</h3></a>\r\n\r\n                        <ul className=\"nav navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/\">Search</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/\">Saved</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4\">\r\n                        <h1 className=\"text-center\">React Google Books Search</h1>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from \"react\";\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <form className=\"form-inline form my-2 my-lg-0\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">Book Search</span>\r\n                            </div>\r\n                            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Book Title\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar","import React from \"react\";\r\n\r\nfunction BookCard(props) {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card w-100\">\r\n                    <div className=\"card-body\">\r\n                        {/* Card Title Row */}\r\n                        <div className=\"row justify-content-between\">\r\n                            <div className=\"col-md-4\">\r\n                                <h5 className=\"card-title\">-Book Title-</h5>\r\n                            </div>\r\n                            <div className=\"col-md-4 d-flex justify-content-end\">\r\n                                <button className=\"card-title btn btn-primary mr-2\">View</button>\r\n                                <button className=\"card-title btn btn-primary\">Save</button>\r\n                            </div>\r\n                        </div>\r\n                        {/* Card Body Row */}\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-md-12\">\r\n                                <p className=\"mb-0\">-Authors-</p>\r\n                                <a href=\"/\">-link-</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-2\">\r\n                                <img src=\"/\" alt=\"-Book-\" />\r\n                            </div>\r\n                            <div className=\"col-md-10\">\r\n                                <p className=\"card-text\">-With supporting text below as a natural lead-in to additional content. With supporting text below as a natural lead-in to additional content.-</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookCard","import React from \"react\";\r\nimport BookCard from \"../components/bookCard\"\r\n\r\nfunction SearchResults(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"container bg-light py-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h4>Results</h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <BookCard />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults;","import React, { Component } from \"react\";\r\nimport NavBar from \"../components/navBar\";\r\nimport SearchBar from \"../components/searchBar\";\r\nimport SearchResults from \"../components/searchResults\"\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    books: [],\r\n    title: \"\"\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   this.loadBooks();\r\n  // }\r\n\r\n  // loadBooks = () => {\r\n  //   API.getBooks()\r\n  //     .then(res =>\r\n  //       this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\r\n  //     )\r\n  //     .catch(err => console.log(err));\r\n  // };\r\n\r\n  // deleteBook = id => {\r\n  //   API.deleteBook(id)\r\n  //     .then(res => this.loadBooks())\r\n  //     .catch(err => console.log(err));\r\n  // };\r\n\r\n  // handleInputChange = event => {\r\n  //   const { name, value } = event.target;\r\n  //   this.setState({\r\n  //     [name]: value\r\n  //   });\r\n  // };\r\n\r\n  // handleFormSubmit = event => {\r\n  //   event.preventDefault();\r\n  //   if (this.state.title && this.state.author) {\r\n  //     API.saveBook({\r\n  //       title: this.state.title,\r\n  //       author: this.state.author,\r\n  //       synopsis: this.state.synopsis\r\n  //     })\r\n  //       .then(res => this.loadBooks())\r\n  //       .catch(err => console.log(err));\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n\r\n        <SearchBar />\r\n\r\n        <SearchResults />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./pages/search\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}